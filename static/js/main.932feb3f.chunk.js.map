{"version":3,"sources":["components/HomePage/HomePage.tsx","components/Navbar/Navbar.tsx","components/NotFoundPage/NotFoundPage.tsx","api.ts","components/Loader/Loader.tsx","components/PersonLink/PersonLink.tsx","components/PeopleTable/PeopleTable.tsx","components/PeoplePage/PeoplePage.tsx","App.tsx","index.tsx"],"names":["HomePage","className","Navbar","role","isActive","cn","to","NotFoundPage","getPeople","delay","Promise","resolve","setTimeout","then","fetch","response","json","Loader","PersonLink","person","slug","sex","name","PeopleTable","people","map","born","died","mother","motherName","father","fatherName","PeoplePage","useParams","useState","setPeople","isLoading","setIsLoading","hasErr","setHasErr","useEffect","res","find","individual","catch","finally","length","App","path","element","index","replace","createRoot","document","getElementById","render"],"mappings":"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","file":"static/js/main.932feb3f.chunk.js","sourcesContent":["export const HomePage = () => (\n  <h1 className=\"title\">Home Page</h1>\n);\n","import { NavLink } from 'react-router-dom';\nimport cn from 'classnames';\n\nexport const Navbar = () => (\n  <nav\n    data-cy=\"nav\"\n    className=\"navbar is-fixed-top has-shadow\"\n    role=\"navigation\"\n    aria-label=\"main navigation\"\n  >\n    <div className=\"container\">\n      <div className=\"navbar-brand\">\n        <NavLink\n          className={({ isActive }) => cn(\n            'navbar-item', { 'has-background-grey-lighter': isActive },\n          )}\n          to=\"/\"\n        >\n          Home\n        </NavLink>\n        <NavLink\n          className={({ isActive }) => cn(\n            'navbar-item', { 'has-background-grey-lighter': isActive },\n          )}\n          to=\"/people\"\n        >\n          People\n        </NavLink>\n      </div>\n    </div>\n  </nav>\n);\n","export const NotFoundPage = () => (\n  <h1 className=\"title\">Page not found</h1>\n);\n","import { Person } from './types/Person';\n\n// eslint-disable-next-line max-len\nconst API_URL = 'https://mate-academy.github.io/react_people-table/api/people.json';\n\nfunction wait(delay: number) {\n  return new Promise(resolve => setTimeout(resolve, delay));\n}\n\nexport function getPeople(): Promise<Person[]> {\n  // keep this delay for testing purpose\n  return wait(500)\n    .then(() => fetch(API_URL))\n    .then(response => response.json());\n}\n","import './Loader.scss';\n\nexport const Loader = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import cn from 'classnames';\nimport { Link } from 'react-router-dom';\nimport { Person } from '../../types';\n\ninterface Props {\n  person: Person,\n}\n\nexport const PersonLink: React.FC<Props> = ({ person }) => (\n  <Link\n    to={`/people/${person.slug}`}\n    className={cn({ 'has-text-danger': person.sex === 'f' })}\n  >\n    {person.name}\n  </Link>\n);\n","import cn from 'classnames';\nimport { Person } from '../../types/Person';\nimport { PersonLink } from '../PersonLink';\n\ninterface Props {\n  people: Person[],\n  slug: string,\n}\n\nexport const PeopleTable: React.FC<Props> = ({\n  people,\n  slug,\n}) => (\n  <table\n    data-cy=\"peopleTable\"\n    className=\"table is-striped is-hoverable is-narrow is-fullwidth\"\n  >\n    <thead>\n      <tr>\n        <th>Name</th>\n        <th>Sex</th>\n        <th>Born</th>\n        <th>Died</th>\n        <th>Mother</th>\n        <th>Father</th>\n      </tr>\n    </thead>\n    <tbody>\n      {people.map(person => (\n        <tr\n          data-cy=\"person\"\n          className={cn({ 'has-background-warning': slug === person.slug })}\n          key={person.slug}\n        >\n          <td>\n            <PersonLink person={person} />\n          </td>\n          <td>{person.sex}</td>\n          <td>{person.born}</td>\n          <td>{person.died}</td>\n          <td>\n            {person.mother ? (\n              <PersonLink person={person.mother} />\n            ) : person.motherName || '-'}\n          </td>\n          <td>\n            {person.father ? (\n              <PersonLink person={person.father} />\n            ) : person.fatherName || '-'}\n          </td>\n        </tr>\n      ))}\n    </tbody>\n  </table>\n);\n","import { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { Person } from '../../types/Person';\nimport { getPeople } from '../../api';\nimport { Loader } from '../Loader';\nimport { PeopleTable } from '../PeopleTable';\n\nexport const PeoplePage = () => {\n  const { slug = '' } = useParams();\n\n  const [people, setPeople] = useState<Person[]>([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [hasErr, setHasErr] = useState(false);\n\n  useEffect(() => {\n    setIsLoading(true);\n    getPeople()\n      .then((res) => setPeople(res.map(person => ({\n        ...person,\n        mother: res.find(individual => individual.name === person.motherName),\n        father: res.find(individual => individual.name === person.fatherName),\n      }))))\n      .catch(() => setHasErr(true))\n      .finally(() => setIsLoading(false));\n  }, []);\n\n  return (\n    <>\n      <h1 className=\"title\">People Page</h1>\n      <div className=\"block\">\n        <div className=\"box table-container\">\n          {isLoading && (\n            <Loader />\n          )}\n\n          {hasErr && (\n            <p data-cy=\"peopleLoadingError\" className=\"has-text-danger\">\n              Something went wrong\n            </p>\n          )}\n\n          {!people.length && (\n            <p data-cy=\"noPeopleMessage\">\n              There are no people on the server\n            </p>\n          )}\n\n          {!!people.length && !hasErr && !isLoading && (\n            <PeopleTable\n              people={people}\n              slug={slug}\n            />\n          )}\n        </div>\n      </div>\n    </>\n  );\n};\n","import {\n  Navigate,\n  Outlet,\n  Route,\n  Routes,\n} from 'react-router-dom';\nimport { HomePage } from './components/HomePage';\nimport { Navbar } from './components/Navbar';\nimport { NotFoundPage } from './components/NotFoundPage';\nimport { PeoplePage } from './components/PeoplePage';\n\nexport const App = () => (\n  <Routes>\n    <Route\n      path=\"/\"\n      element={(\n        <div data-cy=\"app\">\n          <Navbar />\n\n          <main className=\"section\">\n            <div className=\"container\">\n              <Outlet />\n            </div>\n          </main>\n        </div>\n      )}\n    >\n      <Route index element={<HomePage />} />\n      <Route path=\"home\" element={<Navigate to=\"/\" replace />} />\n\n      <Route path=\"people\">\n        <Route index element={<PeoplePage />} />\n        <Route path=\":slug\" element={<PeoplePage />} />\n      </Route>\n\n      <Route path=\"*\" element={<NotFoundPage />} />\n    </Route>\n  </Routes>\n);\n","import { createRoot } from 'react-dom/client';\nimport { HashRouter as Router } from 'react-router-dom';\n\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { App } from './App';\n\ncreateRoot(document.getElementById('root') as HTMLDivElement)\n  .render(\n    <Router>\n      <App />\n    </Router>,\n  );\n"],"sourceRoot":""}